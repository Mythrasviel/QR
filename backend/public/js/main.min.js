function loadStudents(){token=localStorage.getItem("token"),fetch("/api/students",{headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{allStudents=t||[],updateStudentFilters(),filterAndRenderStudents()})}function showStudentQRModal(t,e){let n=document.getElementById("studentQRModal");n||((n=document.createElement("div")).id="studentQRModal",n.className="modal fade",n.tabIndex=-1,n.innerHTML=`
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title"><i class="fa fa-qrcode me-2"></i>QR Code for <span id="qr-modal-name"></span></h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body text-center">
            <div id="qr-modal-code" style="display: flex; justify-content: center; align-items: center;"></div>
            <div class="mt-2 text-muted">Scan to identify this student</div>
          </div>
        </div>
      </div>`,document.body.appendChild(n)),document.getElementById("qr-modal-name").textContent=e;e=document.getElementById("qr-modal-code");e.innerHTML="",e.style.display="flex",e.style.justifyContent="center",e.style.alignItems="center",window.QRCode?new QRCode(e,{text:t,width:200,height:200}):e.textContent=t,new bootstrap.Modal(n).show()}function showSessionAttendanceModal(n){var t=new bootstrap.Modal(document.getElementById("viewAttendanceModal"));let i=document.getElementById("session-attendance-tbody");i.innerHTML='<tr><td colspan="6" class="text-center text-muted">Loading...</td></tr>',fetch("/api/qr/session/"+n,{headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{if(t&&t.grade&&t.section){let s=t.createdAt?new Date(t.createdAt).toLocaleString():"-";fetch(`/api/students?grade=${encodeURIComponent(t.grade)}&section=`+encodeURIComponent(t.section),{headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(e=>{fetch("/api/attendance/report?sessionId="+n,{headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{if(i.innerHTML="",Array.isArray(e)&&0!==e.length){let d={};Array.isArray(t)&&t.forEach(t=>{t.student&&t.student.studentId&&(d[t.student.studentId]=t),t.student&&t.student._id&&(d[t.student._id]=t)}),e.forEach(t=>{var e=d[t._id]||d[t.studentId];let n="Absent",o="text-danger fw-bold",a=s;e&&e.status&&"present"===e.status.toLowerCase()?(n="Present",o="text-success fw-bold",a=e.date?new Date(e.date).toLocaleString():s):e&&(a=s),i.innerHTML+=`<tr>
                  <td>${t.studentId}</td>
                  <td>${t.name}</td>
                  <td>${t.grade}</td>
                  <td>${t.section}</td>
                  <td class="${o}">${n}</td>
                  <td>${a}</td>
                </tr>`})}else i.innerHTML='<tr><td colspan="6" class="text-center text-muted">No students found for this grade and section.</td></tr>'})})}else i.innerHTML='<tr><td colspan="6" class="text-center text-danger">Session not found or missing grade/section.</td></tr>'}),t.show()}function showScanQRModal(o){let e=!0,a=new bootstrap.Modal(document.getElementById("scanQRModal"));var t=document.getElementById("qr-scanner-container");if(t.innerHTML="",window.Html5Qrcode){let n=new Html5Qrcode("qr-scanner-container");n.start({facingMode:"environment"},{fps:10,qrbox:250},t=>{e&&(e=!1,fetch("/api/attendance/mark",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+token},body:JSON.stringify({sessionId:o,qrCode:t})}).then(e=>e.json().then(t=>({status:e.status,data:t}))).then(({status:t,data:e})=>{if(409===t)t=new bootstrap.Modal(document.getElementById("scanErrorModal")),document.getElementById("scan-error-message").textContent=e.message||"This student is already marked present for this session.",t.show(),!n.getState||2!==n.getState()&&3!==n.getState()||n.stop(),a.hide();else{window.hottoast&&window.hottoast.success(e.message||"Attendance marked!"),"function"==typeof loadAttendanceSummary&&loadAttendanceSummary(),!n.getState||2!==n.getState()&&3!==n.getState()||n.stop(),a.hide(),e.student?(document.getElementById("scan-success-student-name").textContent=e.student.name||"",document.getElementById("scan-success-grade-section").textContent=e.student.grade&&e.student.section?e.student.grade+" - "+e.student.section:""):(document.getElementById("scan-success-student-name").textContent="",document.getElementById("scan-success-grade-section").textContent=""),document.getElementById("scan-success-status").textContent="Status: PRESENT",document.getElementById("scan-success-status").className="fw-bold text-success";let t=new bootstrap.Modal(document.getElementById("scanSuccessModal"));t.show(),setTimeout(()=>{t.hide(),document.getElementById("viewAttendanceModal").classList.contains("show")&&showSessionAttendanceModal(o),"function"==typeof loadAttendanceSummary&&loadAttendanceSummary()},2e3)}}))},t=>{}),a._element.addEventListener("hidden.bs.modal",()=>{!n.getState||2!==n.getState()&&3!==n.getState()||n.stop(),e=!0},{once:!0})}else t.innerHTML='<div class="alert alert-warning">QR scanner library not loaded.</div>';a.show()}function markAllAbsentForSession(t){fetch("/api/attendance/mark-absent-for-session",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+token},body:JSON.stringify({sessionId:t})}).then(t=>t.json()).then(t=>{window.hottoast&&window.hottoast.success(t.message||"Marked absentees.")})}function loadGradeSections(){fetch("/api/gradesection",{headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{let e=document.getElementById("grade-section-tbody");e.innerHTML="",Array.isArray(t)&&0!==t.length?(t.forEach(t=>{e.innerHTML+=`
          <tr>
            <td>${t.grade}</td>
            <td>${t.section}</td>
            <td>
              <button class="btn btn-success btn-sm edit-grade-section-btn me-1" data-id="${t._id}" data-grade="${t.grade}" data-section="${t.section}"><i class="fa fa-edit"></i> Edit</button>
              <button class="btn btn-danger btn-sm delete-grade-section-btn" data-id="${t._id}"><i class="fa fa-trash"></i> Delete</button>
            </td>
          </tr>
        `}),Array.from(document.getElementsByClassName("edit-grade-section-btn")).forEach(t=>{t.addEventListener("click",async function(){var t=this.getAttribute("data-id"),e=this.getAttribute("data-grade"),n=this.getAttribute("data-section");await confirmAction("Are you sure you want to edit this Grade/Section?")&&(document.getElementById("edit-grade-section-id").value=t,document.getElementById("edit-grade-input").value=e,document.getElementById("edit-section-input").value=n,new bootstrap.Modal(document.getElementById("editGradeSectionModal")).show())})}),Array.from(document.getElementsByClassName("delete-grade-section-btn")).forEach(t=>{t.addEventListener("click",async function(){var t=this.getAttribute("data-id");await confirmAction("Delete this grade/section? This cannot be undone.")&&fetch("/api/gradesection/"+t,{method:"DELETE",headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{t.message&&t.message.includes("deleted")?(window.hottoast&&window.hottoast.success("Grade/Section deleted!"),loadGradeSections()):window.hottoast&&window.hottoast.error(t.message||"Error")})})})):e.innerHTML='<tr><td colspan="3" class="text-center text-muted">No data</td></tr>'}).catch(t=>console.error("Error loading grade/sections:",t))}document.addEventListener("DOMContentLoaded",function(){if(window.location.pathname.endsWith("admin-dashboard.html"))if(token=localStorage.getItem("token")){a(),i(),!function n(){fetch("/api/attendance/report",{headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{let s=document.getElementById("attendance-records-tbody");s.innerHTML="",Array.isArray(t)&&0!==t.length?(t.forEach(t=>{var e=t.student&&t.student.name?t.student.name:"-",n=t.session&&t.session.className?t.session.className:"-",o=(t.session||t._id,t.student&&t.student._id?t.student._id:""),a=t.date?new Date(t.date).toLocaleString():"-",d=t.status||"-";s.innerHTML+=`
            <tr>
              <td>${e}</td>
              <td>${n}</td>
              <td>${a}</td>
              <td>${d}</td>
              <td><button class="btn btn-danger btn-sm delete-attendance-btn" data-session="${t.session}" data-student="${o}"><i class="fa fa-trash"></i> Delete</button></td>
            </tr>
          `}),Array.from(document.getElementsByClassName("delete-attendance-btn")).forEach(t=>{t.addEventListener("click",async function(){var t=this.getAttribute("data-session"),e=this.getAttribute("data-student");t&&e?await confirmAction("Delete this attendance record? This cannot be undone.")&&fetch(`/api/qr/session/${t}/attendance/`+e,{method:"DELETE",headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{t.message&&t.message.includes("deleted")?(window.hottoast&&window.hottoast.success("Attendance deleted!"),n(),i()):window.hottoast&&window.hottoast.error(t.message||"Error")}):window.hottoast&&window.hottoast.error("Missing session or student ID")})})):s.innerHTML='<tr><td colspan="5" class="text-center text-muted">No data</td></tr>'}).catch(t=>console.error("Error loading attendance records:",t))}(),token||(window.hottoast?window.hottoast.error("Not authenticated. Please log in again."):alert("Not authenticated. Please log in again."),window.location.href="index.html"),window.location.pathname.endsWith("admin-dashboard.html")&&d();let o=document.getElementById("create-session-form"),n=(o&&o.addEventListener("submit",async function(t){var e,n;t.preventDefault(),token?(t=document.getElementById("session-class-input").value.trim(),e=document.getElementById("session-gradesection-input").value,t&&e?([e,n]=e.split("|"),fetch("/api/qr/generate",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+token},body:JSON.stringify({className:t,grade:e,section:n})}).then(t=>t.json()).then(t=>{t.sessionId?(window.hottoast&&window.hottoast.success("Session created successfully!"),o.reset(),a(),markAllAbsentForSession(t.sessionId),setTimeout(i,500)):window.hottoast?window.hottoast.error("Error: "+(t.message||"Could not create session")):alert("Error: "+(t.message||"Could not create session"))}).catch(t=>{window.hottoast?window.hottoast.error("Error creating session: "+t.message):alert("Error creating session: "+t.message)})):window.hottoast?window.hottoast.error("All fields required."):alert("All fields required.")):(window.hottoast?window.hottoast.error("Not authenticated. Please log in again."):alert("Not authenticated. Please log in again."),window.location.href="index.html")}),document.getElementById("add-grade-section-form"));n&&n.addEventListener("submit",function(t){t.preventDefault();var t=document.getElementById("grade-input").value.trim(),e=document.getElementById("section-input").value.trim();t&&e?fetch("/api/gradesection",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+token},body:JSON.stringify({grade:t,section:e})}).then(t=>t.json()).then(t=>{t._id?(window.hottoast?window.hottoast.success("Grade/Section added!"):alert("Grade/Section added!"),n.reset(),s(),d()):window.hottoast?window.hottoast.error(t.message||"Error"):alert(t.message||"Error")}):window.hottoast?window.hottoast.error("Both fields required"):alert("Both fields required")}),s();var t=document.getElementById("logout-btn");function a(){console.debug("Loading sessions..."),fetch("/api/qr/sessions",{headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{console.debug("Sessions loaded:",t);let d=document.getElementById("active-sessions-tbody");d.innerHTML="",Array.isArray(t)&&0!==t.length?(t.forEach(t=>{var e=t.className||"-",n=t.grade&&t.section?t.grade+" - "+t.section:"-",o=t.createdAt?new Date(t.createdAt).toLocaleString():"-",a=t._id||"-";d.innerHTML+=`
            <tr>
              <td>${a}</td>
              <td>${e}</td>
              <td>${n}</td>
              <td>${o}</td>
              <td>
                <div class="action-btn-group">
                  <button class="btn btn-outline-success btn-sm scan-qr-btn" data-id="${t._id}"><i class="fa-solid fa-qrcode me-2"></i>Scan QR Code</button>
                  <button class="btn btn-outline-primary btn-sm view-attendance-btn" data-id="${t._id}"><i class="fa fa-users me-2"></i>View Attendance</button>
                  <button class="btn btn-danger btn-sm delete-session-btn" data-id="${t._id}"><i class="fa fa-trash me-2"></i>Delete</button>
                </div>
              </td>
            </tr>
          `}),Array.from(document.getElementsByClassName("delete-session-btn")).forEach(t=>{t.addEventListener("click",async function(){var t=this.getAttribute("data-id");await confirmAction("Delete this session? This cannot be undone.")&&fetch("/api/qr/session/"+t,{method:"DELETE",headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{t.message&&t.message.includes("deleted")?(window.hottoast&&window.hottoast.success("Session deleted!"),a(),setTimeout(i,500)):window.hottoast&&window.hottoast.error(t.message||"Error")})})}),Array.from(document.getElementsByClassName("view-attendance-btn")).forEach(t=>{t.addEventListener("click",function(){showSessionAttendanceModal(this.getAttribute("data-id"))})}),Array.from(document.getElementsByClassName("scan-qr-btn")).forEach(t=>{t.addEventListener("click",function(){showScanQRModal(this.getAttribute("data-id"))})})):d.innerHTML='<tr><td colspan="5" class="text-center text-muted">No data</td></tr>'}).catch(t=>console.error("Error loading sessions:",t))}function i(){console.debug("Loading attendance summary..."),fetch("/api/attendance/report",{headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{console.debug("Attendance summary loaded:",t);let n=document.getElementById("attendance-summary-tbody");if(n.innerHTML="",Array.isArray(t)&&0!==t.length){let s={};t.forEach(t=>{var e=t.session&&t.session.grade?t.session.grade:"-",n=t.session&&t.session.section?t.session.section:"-",o=t.session&&t.session.className?t.session.className:"-",a=t.session&&t.session._id?t.session._id:"-",d=a+`|${e}|${n}|${o}|`+(t.date?new Date(t.date).toLocaleDateString():"-");s[d]||(s[d]={sessionId:a,grade:e,section:n,className:o,date:t.date,present:0,absent:0}),"present"===t.status?s[d].present++:s[d].absent++}),Object.values(s).forEach(t=>{var e=t.sessionId||"-";n.innerHTML+=`
            <tr>
              <td>${e}</td>
              <td>${t.grade} - ${t.section}</td>
              <td>${t.className}</td>
              <td>${new Date(t.date).toLocaleString()}</td>
              <td>${t.present}</td>
              <td>${t.absent}</td>
              <td><button class="btn btn-outline-success btn-sm download-attendance-btn" data-session-id="${e}"><i class="fa-solid fa-download"></i></button></td>
            </tr>
          `}),Array.from(document.getElementsByClassName("download-attendance-btn")).forEach(t=>{t.addEventListener("click",function(){var t=this.getAttribute("data-session-id");t&&"-"!==t&&downloadAttendanceExcel(t)})})}else n.innerHTML='<tr><td colspan="6" class="text-center text-muted">No data</td></tr>'}).catch(t=>console.error("Error loading attendance summary:",t))}function d(){fetch("/api/gradesection",{headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{let e=document.getElementById("session-gradesection-input");e.innerHTML='<option value="">Select Grade & Section</option>',t.forEach(t=>{e.innerHTML+=`<option value="${t.grade}|${t.section}">${t.grade} - ${t.section}</option>`})})}function s(){fetch("/api/gradesection",{headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{let e=document.getElementById("grade-section-tbody");e.innerHTML="",Array.isArray(t)&&0!==t.length?(t.forEach(t=>{e.innerHTML+=`
            <tr>
              <td>${t.grade}</td>
              <td>${t.section}</td>
              <td>
                <button class="btn btn-success btn-sm edit-grade-section-btn me-1" data-id="${t._id}" data-grade="${t.grade}" data-section="${t.section}"><i class="fa fa-edit"></i> Edit</button>
                <button class="btn btn-danger btn-sm delete-grade-section-btn" data-id="${t._id}"><i class="fa fa-trash"></i> Delete</button>
              </td>
            </tr>
          `}),Array.from(document.getElementsByClassName("edit-grade-section-btn")).forEach(t=>{t.addEventListener("click",async function(){var t=this.getAttribute("data-id"),e=this.getAttribute("data-grade"),n=this.getAttribute("data-section");document.getElementById("edit-grade-section-id").value=t,document.getElementById("edit-grade-input").value=e,document.getElementById("edit-section-input").value=n,new bootstrap.Modal(document.getElementById("editGradeSectionModal")).show()})}),Array.from(document.getElementsByClassName("delete-grade-section-btn")).forEach(t=>{t.addEventListener("click",async function(){var t=this.getAttribute("data-id");await confirmAction("Delete this grade/section? This cannot be undone.")&&fetch("/api/gradesection/"+t,{method:"DELETE",headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{t.message&&t.message.includes("deleted")?(window.hottoast&&window.hottoast.success("Grade/Section deleted!"),s()):window.hottoast&&window.hottoast.error(t.message||"Error")})})})):e.innerHTML='<tr><td colspan="3" class="text-center text-muted">No data</td></tr>'}).catch(t=>console.error("Error loading grade/sections:",t))}function r(o){["session","active","summary","students"].forEach(t=>{var e=document.getElementById("section-"+t),n=document.getElementById("tab-"+t);e&&(e.style.display=t===o?"":"none"),n&&n.classList.toggle("active",t===o)}),"summary"===o&&i()}t&&t.addEventListener("click",async function(){await confirmAction("Are you sure you want to logout?")&&(localStorage.removeItem("token"),window.hottoast&&window.hottoast.success("Logged out!"),setTimeout(()=>{window.location.href="index.html"},800))}),["session","active","summary","students"].forEach(e=>{var t=document.getElementById("tab-"+e);t&&t.addEventListener("click",function(t){t.preventDefault(),r(e)})}),r("session")}else window.location.href="index.html"}),window.location.pathname.endsWith("admin-dashboard.html")&&loadStudents(),window.location.pathname.endsWith("student-dashboard.html")&&((token=localStorage.getItem("token"))?console.debug("Student dashboard: using token",token):(console.error("No token found in localStorage. Redirecting to login."),window.location.href="index.html"),fetch("/api/students/me",{headers:{Authorization:"Bearer "+token}}).then(async t=>{if(console.debug("Student dashboard: fetch /api/students/me response",t),!t.ok)throw e=await t.text(),console.error("Student dashboard: fetch failed, status:",t.status,"body:",e),new Error("Failed to fetch student info. Status: "+t.status+", Body: "+e);var e=t.headers.get("content-type");if(e&&e.includes("application/json"))return t.json();throw e=await t.text(),console.error("Student dashboard: Expected JSON, got:",e),new Error("Expected JSON, got: "+e.slice(0,100))}).then(t=>{var e;console.debug("Student dashboard: student object",t),t&&t.studentId&&t.name&&t.grade&&t.section?((e=document.getElementById("student-qr-code")).innerHTML="",e.style.display="flex",e.style.justifyContent="center",e.style.alignItems="center",window.QRCode&&t.studentId?new QRCode(e,{text:t.studentId,width:200,height:200}):e.textContent=t.studentId||"-",document.getElementById("student-name").textContent=t.name||"-",document.getElementById("student-grade-section").textContent=t.grade&&t.section?t.grade+" - "+t.section:"-",document.getElementById("student-id").textContent=t.studentId||"-"):(document.getElementById("student-qr-code").innerHTML='<div class="alert alert-danger">Student info incomplete. Please contact admin.</div>',document.getElementById("student-id").textContent="",document.getElementById("student-name").textContent="",document.getElementById("student-grade-section").textContent="",console.error("Student dashboard: Incomplete student info",t))}).catch(t=>{document.getElementById("student-qr-code").innerHTML='<div class="alert alert-danger">Failed to load student info. Check console for details.</div>',document.getElementById("student-id").textContent="",document.getElementById("student-name").textContent="",document.getElementById("student-grade-section").textContent="",console.error("Student dashboard error:",t)}));let editGSForm=document.getElementById("edit-grade-section-form"),registerForm=(editGSForm&&editGSForm.addEventListener("submit",async function(t){var e,n;t.preventDefault(),await confirmAction("Are you sure you want to update this Grade/Section?")&&(t=document.getElementById("edit-grade-section-id").value,e=document.getElementById("edit-grade-input").value.trim(),n=document.getElementById("edit-section-input").value.trim(),t&&e&&n?fetch("/api/gradesection/"+t,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer "+token},body:JSON.stringify({grade:e,section:n})}).then(t=>t.json()).then(t=>{var e;t._id?(window.hottoast&&window.hottoast.success("Grade/Section updated!"),loadGradeSections(),(e=bootstrap.Modal.getInstance(document.getElementById("editGradeSectionModal")))&&e.hide()):window.hottoast&&window.hottoast.error(t.message||"Error")}):window.hottoast?window.hottoast.error("All fields required"):alert("All fields required"))}),document.getElementById("register-form"));function confirmAction(a){return new Promise(t=>{let e=new bootstrap.Modal(document.getElementById("confirmationModal"));document.getElementById("confirmationModalMessage").textContent=a;var n=document.getElementById("confirmationModalConfirmBtn"),o=n.cloneNode(!0);n.parentNode.replaceChild(o,n),o.addEventListener("click",()=>{e.hide(),t(!0)}),document.querySelector("#confirmationModal .btn-secondary").onclick=()=>{e.hide(),t(!1)},e.show()})}registerForm&&registerForm.addEventListener("submit",async function(t){var e,n,o,a;t.preventDefault(),await confirmAction("Are you sure you want to register this student?")&&(t=document.getElementById("register-name").value.trim(),e=document.getElementById("register-studentid").value.trim(),n=document.getElementById("register-grade").value,o=document.getElementById("register-section").value,a=document.getElementById("register-password").value,t&&e&&n&&o&&a?fetch("/api/students",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:t,studentId:e,grade:n,section:o,password:a})}).then(t=>t.json()).then(t=>{t.message&&t.message.includes("added")?(window.hottoast&&window.hottoast.success("Registration successful!"),registerForm.reset(),setTimeout(()=>{window.location.href="index.html"},1200)):window.hottoast&&window.hottoast.error(t.message||"Error")}):window.hottoast?window.hottoast.error("All fields required"):alert("All fields required"))});let adminProfileForm=document.getElementById("admin-profile-form"),adminProfileUsername=document.getElementById("admin-profile-username"),adminProfilePassword=document.getElementById("admin-profile-password"),adminProfileModal=document.getElementById("adminProfileModal"),studentSearchInput=(adminProfileModal&&adminProfileModal.addEventListener("show.bs.modal",function(){let t="";try{var e=JSON.parse(atob(token.split(".")[1]));t=e.name||""}catch(t){}adminProfileUsername.value=t,adminProfilePassword.value=""}),adminProfileForm&&adminProfileForm.addEventListener("submit",function(t){t.preventDefault();var t=adminProfileUsername.value.trim(),e=adminProfilePassword.value.trim();t?fetch("/api/admin/update",{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer "+token},body:JSON.stringify(e?{name:t,password:e}:{name:t})}).then(t=>t.json()).then(t=>{t&&t.message&&t.message.includes("updated")?(window.hottoast&&window.hottoast.success("Profile updated! Please log in again."),setTimeout(()=>{localStorage.removeItem("token"),window.location.href="index.html"},1200)):window.hottoast&&window.hottoast.error(t.message||"Update failed")}).catch(t=>{window.hottoast&&window.hottoast.error("Error: "+t.message)}):window.hottoast&&window.hottoast.error("Username is required")}),document.getElementById("student-search")),filterGradeSelect=document.getElementById("filter-grade"),filterSectionSelect=document.getElementById("filter-section"),allStudents=[];function renderStudentTable(t){let e=document.querySelector("#students-table tbody");e.innerHTML="",Array.isArray(t)&&0!==t.length?(t.forEach(t=>{e.innerHTML+=`
      <tr>
        <td>${t.studentId||"-"}</td>
        <td>${t.name}</td>
        <td>${t.grade}</td>
        <td>${t.section}</td>
        <td>
          <button class="btn btn-outline-primary btn-sm view-qr-btn" data-studentid="${t.studentId}" data-name="${t.name}"><i class="fa fa-qrcode"></i> View QR</button>
          <button class="btn btn-success btn-sm edit-student-btn ms-1" data-id="${t._id}" data-name="${t.name}" data-studentid="${t.studentId}" data-grade="${t.grade}" data-section="${t.section}"><i class="fa fa-edit"></i> Edit</button>
          <button class="btn btn-danger btn-sm delete-student-btn ms-1" data-id="${t._id}" data-name="${t.name}"><i class="fa fa-trash"></i> Delete</button>
        </td>
      </tr>
    `}),Array.from(document.getElementsByClassName("delete-student-btn")).forEach(t=>{t.addEventListener("click",async function(){var t=this.getAttribute("data-id");await confirmAction(`Delete student '${this.getAttribute("data-name")}'? This cannot be undone.`)&&fetch("/api/students/"+t,{method:"DELETE",headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{t.message&&t.message.includes("deleted")?(window.hottoast&&window.hottoast.success("Student deleted!"),loadStudents()):window.hottoast&&window.hottoast.error(t.message||"Error")})})}),Array.from(document.getElementsByClassName("view-qr-btn")).forEach(t=>{t.addEventListener("click",function(){showStudentQRModal(this.getAttribute("data-studentid"),this.getAttribute("data-name"))})}),Array.from(document.getElementsByClassName("edit-student-btn")).forEach(t=>{t.addEventListener("click",async function(){var t=this.getAttribute("data-id"),e=this.getAttribute("data-name"),n=this.getAttribute("data-studentid");let o=this.getAttribute("data-grade"),a=this.getAttribute("data-section");document.getElementById("edit-student-id").value=t,document.getElementById("edit-student-name").value=e,document.getElementById("edit-student-studentid").value=n,fetch("/api/gradesection",{headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{let e=document.getElementById("edit-student-grade"),n=document.getElementById("edit-student-section");e.innerHTML="",n.innerHTML="",[...new Set(t.map(t=>t.grade))].forEach(t=>{e.innerHTML+=`<option value="${t}">${t}</option>`}),[...new Set(t.map(t=>t.section))].forEach(t=>{n.innerHTML+=`<option value="${t}">${t}</option>`}),e.value=o,n.value=a});new bootstrap.Modal(document.getElementById("editStudentModal")).show();t=document.getElementById("edit-student-studentid");let d=document.getElementById("edit-student-qr-preview");d&&(d.innerHTML="",window.QRCode&&n?new QRCode(d,{text:n,width:120,height:120}):d.textContent=n||"-"),t.addEventListener("input",function(){d&&(d.innerHTML="",window.QRCode&&this.value?new QRCode(d,{text:this.value,width:120,height:120}):d.textContent=this.value||"-")})})})):e.innerHTML='<tr><td colspan="5" class="text-center text-muted">No students found</td></tr>'}function updateStudentFilters(){var t=[...new Set(allStudents.map(t=>t.grade))].sort(),e=[...new Set(allStudents.map(t=>t.section))].sort();filterGradeSelect.innerHTML='<option value="">All Grades</option>'+t.map(t=>`<option value="${t}">${t}</option>`).join(""),filterSectionSelect.innerHTML='<option value="">All Sections</option>'+e.map(t=>`<option value="${t}">${t}</option>`).join("")}function filterAndRenderStudents(){let t=allStudents,e=studentSearchInput.value.trim().toLowerCase(),n=filterGradeSelect.value,o=filterSectionSelect.value;e&&(t=t.filter(t=>t.name.toLowerCase().includes(e))),n&&(t=t.filter(t=>t.grade===n)),renderStudentTable(t=o?t.filter(t=>t.section===o):t)}function downloadAttendanceExcel(e){e&&fetch("/api/qr/session/"+e,{headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{if(t&&t.className&&t.grade&&t.section&&t.createdAt){let n=t.className.replace(/[^a-zA-Z0-9-_ ]/g,"").replace(/\s+/g,"_")+`_${t.grade.replace(/[^a-zA-Z0-9-_ ]/g,"")}-${t.section.replace(/[^a-zA-Z0-9-_ ]/g,"")}_${new Date(t.createdAt).toISOString().slice(0,10)}.xlsx`;fetch("/api/attendance/report?sessionId="+e,{headers:{Authorization:"Bearer "+token}}).then(t=>t.json()).then(t=>{var e;Array.isArray(t)&&0!==t.length?(t=t.map(t=>({"Student ID":t.student&&t.student.studentId?t.student.studentId:"-",Name:t.student&&t.student.name?t.student.name:"-",Grade:t.student&&t.student.grade?t.student.grade:"-",Section:t.student&&t.student.section?t.student.section:"-",Status:t.status||"-",Date:t.date?new Date(t.date).toLocaleString():"-"})),t=XLSX.utils.json_to_sheet(t),e=XLSX.utils.book_new(),XLSX.utils.book_append_sheet(e,t,"Attendance"),XLSX.writeFile(e,n)):window.hottoast&&window.hottoast.error("No attendance data for this session.")}).catch(t=>{window.hottoast&&window.hottoast.error("Download failed"),console.error("Excel download error:",t)})}else window.hottoast&&window.hottoast.error("Session details not found")}).catch(t=>{window.hottoast&&window.hottoast.error("Session fetch failed"),console.error("Session fetch error:",t)})}studentSearchInput&&filterGradeSelect&&filterSectionSelect&&(studentSearchInput.addEventListener("input",filterAndRenderStudents),filterGradeSelect.addEventListener("change",filterAndRenderStudents),filterSectionSelect.addEventListener("change",filterAndRenderStudents));